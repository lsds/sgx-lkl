+ Test failure reason:
+[    0.140765] Out of memory: Killed process 36 (host0) total-vm:4kB, anon-rss:0kB, file-rss:0kB, shmem-rss:0kB
+[    0.143511] Kernel panic - not syncing: System is deadlocked on memory
+[    0.144048] ---[ end Kernel panic - not syncing: System is deadlocked on memory ]---
+[[  SGX-LKL ]] FAIL: Kernel panic! Run DEBUG build with SGXLKL_KERNEL_VERBOSE=1 for more information. Aborting...
+2020-07-24T14:59:01.000000Z [(H)ERROR] tid(0x7fc233221700) | :OE_ENCLAVE_ABORTING [/mnt/vamsi/repo/sgx-lkl/openenclave/host/calls.c:oe_call_enclave_function_by_table_id:91]
+[   SGX-LKL  ] ethread (4: 19) [   SGX-LKL  ] FAIL: sgxlkl_ethread_init() failed (id=4 result=19 (OE_ENCLAVE_ABORTING))

+ Patch Description:
+ Tests were failing with Kernel panic (out of memory) in loop device.
+ loop device filesystem is having a limit of 32MB
+ So modified the tests using root filesystem.
diff --git a/testcases/kernel/syscalls/fallocate/fallocate05.c b/testcases/kernel/syscalls/fallocate/fallocate05.c
index 50c610c44..d90518903 100644
--- a/testcases/kernel/syscalls/fallocate/fallocate05.c
+++ b/testcases/kernel/syscalls/fallocate/fallocate05.c
@@ -8,7 +8,7 @@
  */

 #define _GNU_SOURCE
-
+#include <string.h>
 #include <stdio.h>
 #include <stdlib.h>
 #include <errno.h>
@@ -19,7 +19,7 @@
 #define MNTPOINT "mntpoint"
 #define FALLOCATE_SIZE 8192
 #define TESTED_FLAGS "fallocate(FALLOC_FL_PUNCH_HOLE | FALLOC_FL_KEEP_SIZE)"
-
+char fname[256];
 static int fd;

 static void run(void)
@@ -27,6 +27,7 @@ static void run(void)
        char buf[FALLOCATE_SIZE];
        ssize_t ret;

+       SAFE_MKDIR(MNTPOINT, 0644);
        fd = SAFE_OPEN(MNTPOINT "/test_file", O_WRONLY | O_CREAT);

        if (fallocate(fd, 0, 0, FALLOCATE_SIZE)) {
@@ -80,14 +81,18 @@ static void cleanup(void)
 {
        if (fd > 0)
                SAFE_CLOSE(fd);
+
+       for (int i = 0; i < 13; i++){
+               sprintf(fname, "mntpoint/file%d", i);
+               remove(fname);
+       }
+
+       remove("mntpoint/test_file");
+       SAFE_RMDIR(MNTPOINT);
 }

 static struct tst_test test = {
        .needs_root = 1,
-       .needs_tmpdir = 1,
-       .mount_device = 1,
-       .mntpoint = MNTPOINT,
-       .all_filesystems = 1,
        .cleanup = cleanup,
        .test_all = run,
 };

