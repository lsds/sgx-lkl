In this ltp test case (testcases/kernel/syscalls/getrusage/getrusage02),
some of the sub test case designed to test generation of EFAULT
by passing/accessing invalid address values to “getrusage” syscall.
Currently sgx behaviour is to call enclave abort, if address is
not within enclave address range. Because of this test program
is causing enclave abort and exiting with non-zero exit code. 

Github issue169 (https://github.com/lsds/sgx-lkl/issues/169)
is raised to fix this behaviour. The sub test cases which test
EFAULT error behaviour is commented/disabled until github
issue169 is fixed.

diff --git a/testcases/kernel/syscalls/getrusage/getrusage02.c b/testcases/kernel/syscalls/getrusage/getrusage02.c
index 8077606a2..e1a33aefa 100644
--- a/testcases/kernel/syscalls/getrusage/getrusage02.c
+++ b/testcases/kernel/syscalls/getrusage/getrusage02.c
@@ -76,6 +76,10 @@
 #define RUSAGE_BOTH (-2)	/* still works on SuSE      */
 #endif /* so this is a work around */
 
+//TODO: Remove below line after fixing github issue 169.
+//url: https://github.com/lsds/sgx-lkl/issues/169
+#define FIXED_GITHUB_ISSUE_169 0
+
 static void setup();
 static void cleanup();
 
@@ -91,9 +95,13 @@ struct test_cases_t {
 	{
 	RUSAGE_BOTH, &usage, EINVAL},
 #ifndef UCLINUX
+//TODO: Remove below "#if" and corresponding "#endif" after fixing github issue 169
+//url: https://github.com/lsds/sgx-lkl/issues/169
+#if FIXED_GITHUB_ISSUE_169
 	{
 	RUSAGE_SELF, (struct rusage *)-1, EFAULT}
 #endif
+#endif
 };
 
 int TST_TOTAL = ARRAY_SIZE(test_cases);
