diff --git a/testcases/kernel/syscalls/flistxattr/flistxattr03.c b/testcases/kernel/syscalls/flistxattr/flistxattr03.c
index 49b463425..82fe02f64 100644
--- a/testcases/kernel/syscalls/flistxattr/flistxattr03.c
+++ b/testcases/kernel/syscalls/flistxattr/flistxattr03.c
@@ -13,6 +13,11 @@
 * which can be used to estimate a suitable buffer.
 */
 
+/* Currently xattr is not enabled while mounting root file system. Patch is
+ * to mount root file system with xattr enabled and then use it for the test.
+*/
+
+#include <stdio.h>
 #include "config.h"
 #include <errno.h>
 #include <sys/types.h>
@@ -28,6 +33,14 @@
 #define SECURITY_KEY	"security.ltptest"
 #define VALUE	"test"
 #define VALUE_SIZE	(sizeof(VALUE) - 1)
+#define MNTPOINT        "mntpoint"
+#define DIR_MODE        (S_IRWXU | S_IRWXG | S_IROTH | S_IXOTH)
+#define FILE_MODE       (S_IRWXU | S_IRWXG | S_IRWXO | S_ISUID | S_ISGID)
+#define TESTFILE1 "mntpoint/flistxattr03testfile1"
+#define TESTFILE2 "mntpoint/flistxattr03testfile2"
+
+static const char *device = "/dev/vda";
+static const char *fs_type = "ext4";
 
 static int fd[] = {0, 0};
 
@@ -57,9 +70,12 @@ static void verify_flistxattr(unsigned int n)
 
 static void setup(void)
 {
-	fd[0] = SAFE_OPEN("testfile1", O_RDWR | O_CREAT, 0644);
+	rmdir(MNTPOINT);
+	SAFE_MKDIR(MNTPOINT, DIR_MODE);
+	SAFE_MOUNT(device, MNTPOINT, fs_type, 0, "user_xattr");
+	fd[0] = SAFE_OPEN(TESTFILE1, O_RDWR | O_CREAT, 0644);
 
-	fd[1] = SAFE_OPEN("testfile2", O_RDWR | O_CREAT, 0644);
+	fd[1] = SAFE_OPEN(TESTFILE2, O_RDWR | O_CREAT, 0644);
 
 	SAFE_FSETXATTR(fd[1], SECURITY_KEY, VALUE, VALUE_SIZE, XATTR_CREATE);
 }
@@ -68,6 +84,10 @@ static void cleanup(void)
 {
 	SAFE_CLOSE(fd[1]);
 	SAFE_CLOSE(fd[0]);
+	remove(TESTFILE1);
+	remove(TESTFILE2);
+	SAFE_UMOUNT(MNTPOINT);
+	SAFE_RMDIR(MNTPOINT);
 }
 
 static struct tst_test test = {
