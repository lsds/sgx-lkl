+ Test will be enabled once git isue 297 is fixed.
+ Issue 297: [Tests] lkl_access_ok() should return -1 on invalid access
+ https://github.com/lsds/sgx-lkl/issues/297
diff --git a/testcases/kernel/syscalls/readv/readv02.c b/testcases/kernel/syscalls/readv/readv02.c
index aa40e2c7d..cbdf35eb3 100644
--- a/testcases/kernel/syscalls/readv/readv02.c
+++ b/testcases/kernel/syscalls/readv/readv02.c
@@ -126,7 +126,7 @@ int main(int ac, char **av)
                                 "value");
                }

-//test2:
+/*test2: // TODO: Enable once git issue 297 is fixed
                l_seek(fd[0], CHUNK * 6, 0);
                if (readv(fd[0], (rd_iovec + 6), 3) < 0) {
                        if (errno != EFAULT) {
@@ -143,7 +143,7 @@ int main(int ac, char **av)
                } else {
                        tst_resm(TFAIL, "Error: readv returned a positive "
                                 "value");
-               }
+               }*/

 //test3:
                if (readv(fd[1], (rd_iovec + 9), 1) < 0) {
@@ -222,11 +222,7 @@ void setup(void)

        fd[1] = -1;             /* Invalid file descriptor */

-       bad_addr = mmap(0, 1, PROT_NONE,
-                       MAP_PRIVATE_EXCEPT_UCLINUX | MAP_ANONYMOUS, 0, 0);
-       if (bad_addr == MAP_FAILED) {
-               tst_brkm(TBROK, cleanup, "mmap failed");
-       }
+       bad_addr = 0;
        rd_iovec[6].iov_base = bad_addr;
 }

