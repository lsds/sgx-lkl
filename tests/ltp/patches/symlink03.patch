+ Modified the tests by changing the temporary directory creation/deletion with root user.
+ Issue 297: [Tests] lkl_access_ok() should return -1 on invalid access
+ https://github.com/lsds/sgx-lkl/issues/297
diff --git a/testcases/kernel/syscalls/symlink/symlink03.c b/testcases/kernel/syscalls/symlink/symlink03.c
index c89fe5d6d..aa4dadb7a 100644
--- a/testcases/kernel/syscalls/symlink/symlink03.c
+++ b/testcases/kernel/syscalls/symlink/symlink03.c
@@ -122,8 +122,8 @@ struct test_case_t {                /* test case struct. to hold ref. test cond's */
        {TEST_FILE1, SYM_FILE1, "No Search permissions to process",
                    EACCES, setup1}, {
        TEST_FILE2, SYM_FILE2, "Specified symlink already exists",
-                   EEXIST, setup2}, {
-       TESTFILE, NULL, "Invalid address", EFAULT, no_setup}, {
+                   EEXIST, setup2},/* { TODO: Enable once git issue 297 is fixed
+       TESTFILE, NULL, "Invalid address", EFAULT, no_setup},*/ {
        TESTFILE, Longpathname, "Symlink path too long", ENAMETOOLONG,
                    longpath_setup}, {
        TESTFILE, "", "Symlink Pathname is empty", ENOENT, no_setup}, {
@@ -211,6 +211,7 @@ void setup(void)
        int ind;

        tst_require_root();
+       tst_tmpdir();

        tst_sig(NOFORK, DEF_HANDLER, cleanup);

@@ -226,8 +227,6 @@ void setup(void)
        if (setuid(ltpuser->pw_uid) == -1)
                tst_resm(TINFO | TERRNO, "setuid(%d) failed", ltpuser->pw_uid);

-       tst_tmpdir();
-
        /* call individual setup functions */
        for (ind = 0; Test_cases[ind].desc != NULL; ind++) {
                if (!Test_cases[ind].link)
@@ -346,7 +345,7 @@ void cleanup(void)

        /* Restore mode permissions on test directory created in setup2() */
        SAFE_CHMOD(NULL, DIR_TEMP, MODE_RWX);
-
+       tst_require_root();
        tst_rmdir();

 }

