This patch is necessary to fix the test case
(testcases/kernel/syscalls/mkdir/mkdir04) failure
in sgx-lkl environment. Test case is updated to
use multi-threaded environment instead of
multi-process.

diff --git a/testcases/kernel/syscalls/mkdir/mkdir04.c b/testcases/kernel/syscalls/mkdir/mkdir04.c
index 87512a4be..730d116d1 100644
--- a/testcases/kernel/syscalls/mkdir/mkdir04.c
+++ b/testcases/kernel/syscalls/mkdir/mkdir04.c
@@ -15,6 +15,7 @@
 #include <unistd.h>
 #include <stdlib.h>
 #include "tst_test.h"
+#include <pthread.h>
 
 #define TESTDIR	 "testdir"
 #define TESTSUBDIR "testdir/testdir"
@@ -37,24 +38,31 @@ static void verify_mkdir(void)
 	tst_res(TPASS | TERRNO, "mkdir() failed expectedly");
 }
 
-static void setup(void)
+void* child_thread(void* arg)
 {
 	struct passwd *pw;
-	pid_t pid;
-
 	pw = SAFE_GETPWNAM("nobody");
 	nobody_uid = pw->pw_uid;
+
+	SAFE_SETREUID(nobody_uid, nobody_uid);
+	SAFE_MKDIR(TESTDIR, 0700);
+	pthread_exit(NULL);
+}
+
+static void setup(void)
+{
+	struct passwd *pw;
+	pthread_t tid;
+
 	pw = SAFE_GETPWNAM("bin");
 	bin_uid = pw->pw_uid;
-
-	pid = SAFE_FORK();
-	if (pid == 0) {
-		SAFE_SETREUID(nobody_uid, nobody_uid);
-		SAFE_MKDIR(TESTDIR, 0700);
-		exit(0);
+	
+	//start a child thread to create a directory	
+	if(pthread_create(&tid, NULL, child_thread, NULL)== -1)
+	{
+		tst_brk(TBROK, "Thread create failed");
 	}
-
-	tst_reap_children();
+	pthread_join(tid, NULL);
 
 	SAFE_SETREUID(bin_uid, bin_uid);
 }
@@ -64,5 +72,4 @@ static struct tst_test test = {
 	.needs_tmpdir = 1,
 	.needs_root = 1,
 	.setup = setup,
-	.forks_child = 1,
 };
