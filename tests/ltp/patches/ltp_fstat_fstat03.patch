diff --git a/testcases/kernel/syscalls/fstat/fstat03.c b/testcases/kernel/syscalls/fstat/fstat03.c
index 68fae43df..134c5185a 100644
--- a/testcases/kernel/syscalls/fstat/fstat03.c
+++ b/testcases/kernel/syscalls/fstat/fstat03.c
@@ -12,6 +12,14 @@
  * 2) Calls fstat() with an invalid address for stat structure
  *    -> EFAULT (or receive signal SIGSEGV)
  */
+/*
+ * Patch Description: Here one test is trying to access invalid address,
+ * Process should get efault if it access invalid address
+ * But in sg,x enclave exits when process access invalid address, so application will not get control.
+ * Please refer git issue 169
+ * This cannot be tested now, so commented the 2nd test and will enable the test once issue 169 is fixed.
+ */
+

 #include <errno.h>
 #include <stdlib.h>
@@ -33,8 +41,8 @@ static struct tcase {
        struct stat *stat_buf;
        int exp_err;
 } tcases[] = {
-       {&fd_ebadf, &stat_buf, EBADF},
-       {&fd_ok, NULL, EFAULT},
+       {&fd_ebadf, &stat_buf, EBADF}
+       //{&fd_ok, NULL, EFAULT}, TODO: Analyze and enable once issue 169 is fixed
 };

 static void check_fstat(unsigned int tc_num)

